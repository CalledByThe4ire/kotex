@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin margin-x($margin) {
	margin-right: $margin;
	margin-left: $margin;
}

@mixin margin-y($margin) {
	margin-top: $margin;
	margin-bottom: $margin;
}

@mixin padding-x($padding) {
	padding-right: $padding;
	padding-left: $padding;
}

@mixin padding-y($padding) {
	padding-top: $padding;
	padding-bottom: $padding;
}

@mixin container() {
	margin: 0 auto;

	@include padding-x($offset--xs);
	min-width: $container--xs;
	max-width: $container--lg;

	@media #{$sm} {
		@include padding-x($offset--sm);
	}

	@media #{$md} {
		@include padding-x($offset--md);
	}

	@media #{$lg} {
		@include padding-x($offset--lg);
	}
}

@mixin container-fluid() {
	margin: 0 auto;
	width: 100%;
}

@mixin list-clear() {
	margin: 0;
	padding: 0;
	list-style: none;
}

@mixin retina-background($image, $ext: "png") {
	background-image: url("../images/" + $image + "." + $ext);

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		background-image: url("../images/" + $image + "@2x." + $ext);
	}
}

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	@each $property in $properties {
		#{$property}: $min-value;
	}

	@media screen and (min-width: $min-vw) {
		@each $property in $properties {
			#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
		}
	}

	@media screen and (min-width: $max-vw) {
		@each $property in $properties {
			#{$property}: $max-value;
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin btn($padding-x: 4rem, $padding-y: 1.5rem) {
	display: flex;
	justify-content: center;

	@include padding-x($padding-x);
	@include padding-y($padding-y);
	min-width: 215px;

	@include fluid-type(font-size, 320px, 768px, 24px, 56px);
	line-height: 1;
	font-family: $font-family;
	font-weight: 700;
	white-space: nowrap;
	color: #ffffff;
	text-transform: uppercase;
	vertical-align: middle;

	background-color: $color-primary;
	box-shadow: inset 0 -0.9rem 0.2rem darken($color-primary, 10%), inset 0 -1.1rem 0.1rem lighten($color-primary, 10%), inset 0 -1.2rem 1.2rem darken($color-primary, 15%);

	cursor: pointer;
	user-select: none;

	@media #{$md} {
		font-size: $font-size * 1.5;
	}

	@media #{$lg} {
		font-size: $font-size * 2.5;
	}

	&:hover,
	&--hover {
		background-color: $color-secondary;
		box-shadow: inset 0 -0.9rem 0.2rem darken($color-secondary, 10%), inset 0 -1.1rem 0.1rem lighten($color-secondary, 10%), inset 0 -1.2rem 1.2rem darken($color-secondary, 15%);
		transition-duration: 0.3s;
	}

	&:active,
	&--active {
		box-shadow: 0 0 15px rgba($text-color, 10%), inset 0 -0.9rem 0.2rem darken($color-secondary, 10%), inset 0 -1.1rem 0.1rem lighten($color-secondary, 10%), inset 0 -1.2rem 1.2rem darken($color-secondary, 15%);
		outline: 0;
	}

	&:disabled,
	&--disabled {
		cursor: not-allowed;
		pointer-events: none;
	}
}



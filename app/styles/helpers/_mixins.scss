@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin margin-x($margin) {
	margin-right: $margin;
	margin-left: $margin;
}

@mixin margin-y($margin) {
	margin-top: $margin;
	margin-bottom: $margin;
}

@mixin padding-x($padding) {
	padding-right: $padding;
	padding-left: $padding;
}

@mixin padding-y($padding) {
	padding-top: $padding;
	padding-bottom: $padding;
}

@mixin container() {
	margin: 0 auto;

	@include padding-x($offset--xs);
	min-width: $container--min;
	max-width: $container--max;

	@media #{$sm} {
		@include padding-x($offset--sm);
	}

	@media #{$md} {
		@include padding-x($offset--md);
	}

	@media #{$lg} {
		@include padding-x($offset--lg);
	}
}

@mixin container-fluid() {
	margin: 0 auto;
	width: 100%;
}

@mixin list-clear() {
	margin: 0;
	padding: 0;
	list-style: none;
}

@mixin retina-background($image, $ext: "png") {
	background-image: url("../images/" + $image + "." + $ext);

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		background-image: url("../images/" + $image + "@2x." + $ext);
	}
}

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	@each $property in $properties {
		#{$property}: $min-value;
	}

	@media screen and (min-width: $min-vw) {
		@each $property in $properties {
			#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
		}
	}

	@media screen and (min-width: $max-vw) {
		@each $property in $properties {
			#{$property}: $max-value;
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}


